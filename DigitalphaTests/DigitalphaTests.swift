//
//  DigitalphaTests.swift
//  DigitalphaTests
//
//  Created by TJ Usiyan on 2017/07/09.
//  Copyright Â© 2017 Buttons and Lights LLC. All rights reserved.
//

import XCTest
@testable import Digitalpha

class DigitalphaTests: XCTestCase {
    
    func testCardinalSpelledOutWithDefaultConnector() {
        XCTAssertEqual(0.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "zero")
        XCTAssertEqual(1.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one")
        XCTAssertEqual(2.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "two")
        XCTAssertEqual(3.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "three")
        XCTAssertEqual(4.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "four")
        XCTAssertEqual(5.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "five")
        XCTAssertEqual(6.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "six")
        XCTAssertEqual(7.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "seven")
        XCTAssertEqual(8.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "eight")
        XCTAssertEqual(9.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "nine")
        XCTAssertEqual(10.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "ten")
        XCTAssertEqual(11.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "eleven")
        XCTAssertEqual(12.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "twelve")
        XCTAssertEqual(13.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "thirteen")
        XCTAssertEqual(14.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "fourteen")
        XCTAssertEqual(15.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "fifteen")
        XCTAssertEqual(16.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "sixteen")
        XCTAssertEqual(17.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "seventeen")
        XCTAssertEqual(18.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "eighteen")
        XCTAssertEqual(19.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "nineteen")
        XCTAssertEqual(20.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "twenty")
        XCTAssertEqual(21.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "twenty-one")
        XCTAssertEqual(22.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "twenty-two")
        XCTAssertEqual(23.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "twenty-three")
        XCTAssertEqual(24.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "twenty-four")
        XCTAssertEqual(25.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "twenty-five")
        XCTAssertEqual(26.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "twenty-six")
        XCTAssertEqual(27.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "twenty-seven")
        XCTAssertEqual(28.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "twenty-eight")
        XCTAssertEqual(29.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "twenty-nine")
        XCTAssertEqual(30.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "thirty")
        XCTAssertEqual(31.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "thirty-one")
        XCTAssertEqual(32.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "thirty-two")
        XCTAssertEqual(40.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "forty")
        XCTAssertEqual(50.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "fifty")
        XCTAssertEqual(60.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "sixty")
        XCTAssertEqual(70.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "seventy")
        XCTAssertEqual(80.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "eighty")
        XCTAssertEqual(87.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "eighty-seven")
        XCTAssertEqual(90.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "ninety")
        XCTAssertEqual(99.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "ninety-nine")
        XCTAssertEqual(100.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one hundred")
        XCTAssertEqual(101.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one hundred one")
        XCTAssertEqual(110.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one hundred ten")
        XCTAssertEqual(111.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one hundred eleven")
        XCTAssertEqual(120.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one hundred twenty")
        XCTAssertEqual(121.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one hundred twenty-one")
        XCTAssertEqual(144.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one hundred forty-four")
        XCTAssertEqual(200.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "two hundred")
        XCTAssertEqual(300.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "three hundred")
        XCTAssertEqual(400.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "four hundred")
        XCTAssertEqual(500.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "five hundred")
        XCTAssertEqual(600.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "six hundred")
        XCTAssertEqual(666.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "six hundred sixty-six")
        XCTAssertEqual(700.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "seven hundred")
        XCTAssertEqual(777.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "seven hundred seventy-seven")
        XCTAssertEqual(800.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "eight hundred")
        XCTAssertEqual(900.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "nine hundred")
        XCTAssertEqual(1000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one thousand")
        XCTAssertEqual(1001.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one thousand one")
        XCTAssertEqual(1010.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one thousand ten")
        XCTAssertEqual(1011.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one thousand eleven")
        XCTAssertEqual(1024.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one thousand twenty-four")
        XCTAssertEqual(1100.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one thousand one hundred")
        XCTAssertEqual(1101.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one thousand one hundred one")
        XCTAssertEqual(1728.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one thousand seven hundred twenty-eight")
        XCTAssertEqual(2000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "two thousand")
        XCTAssertEqual(3000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "three thousand")
        XCTAssertEqual(10000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "ten thousand")
        XCTAssertEqual(100000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one hundred thousand")
        XCTAssertEqual(500000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "five hundred thousand")
        XCTAssertEqual(1000000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one million")
        XCTAssertEqual(1048576.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one million forty-eight thousand five hundred seventy-six")
        XCTAssertEqual(10000000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "ten million")
        XCTAssertEqual(100000000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "one hundred million")
    }

    func testCardinalSpelledOutWithAndConnector() {
        XCTAssertEqual(0.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "zero")
        XCTAssertEqual(1.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one")
        XCTAssertEqual(2.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "two")
        XCTAssertEqual(3.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "three")
        XCTAssertEqual(4.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "four")
        XCTAssertEqual(5.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "five")
        XCTAssertEqual(6.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "six")
        XCTAssertEqual(7.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "seven")
        XCTAssertEqual(8.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "eight")
        XCTAssertEqual(9.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "nine")
        XCTAssertEqual(10.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "ten")
        XCTAssertEqual(11.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "eleven")
        XCTAssertEqual(12.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "twelve")
        XCTAssertEqual(13.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "thirteen")
        XCTAssertEqual(14.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "fourteen")
        XCTAssertEqual(15.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "fifteen")
        XCTAssertEqual(16.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "sixteen")
        XCTAssertEqual(17.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "seventeen")
        XCTAssertEqual(18.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "eighteen")
        XCTAssertEqual(19.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "nineteen")
        XCTAssertEqual(20.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "twenty")
        XCTAssertEqual(21.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "twenty-one")
        XCTAssertEqual(22.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "twenty-two")
        XCTAssertEqual(23.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "twenty-three")
        XCTAssertEqual(24.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "twenty-four")
        XCTAssertEqual(25.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "twenty-five")
        XCTAssertEqual(26.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "twenty-six")
        XCTAssertEqual(27.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "twenty-seven")
        XCTAssertEqual(28.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "twenty-eight")
        XCTAssertEqual(29.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "twenty-nine")
        XCTAssertEqual(30.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "thirty")
        XCTAssertEqual(31.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "thirty-one")
        XCTAssertEqual(32.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "thirty-two")
        XCTAssertEqual(40.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "forty")
        XCTAssertEqual(50.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "fifty")
        XCTAssertEqual(60.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "sixty")
        XCTAssertEqual(70.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "seventy")
        XCTAssertEqual(80.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "eighty")
        XCTAssertEqual(87.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "eighty-seven")
        XCTAssertEqual(90.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "ninety")
        XCTAssertEqual(100.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one hundred")
        XCTAssertEqual(101.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one hundred and one")
        XCTAssertEqual(110.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one hundred and ten")
        XCTAssertEqual(111.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one hundred and eleven")
        XCTAssertEqual(120.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one hundred and twenty")
        XCTAssertEqual(121.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one hundred and twenty-one")
        XCTAssertEqual(144.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one hundred and forty-four")
        XCTAssertEqual(200.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "two hundred")
        XCTAssertEqual(300.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "three hundred")
        XCTAssertEqual(400.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "four hundred")
        XCTAssertEqual(500.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "five hundred")
        XCTAssertEqual(600.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "six hundred")
        XCTAssertEqual(666.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "six hundred and sixty-six")
        XCTAssertEqual(700.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "seven hundred")
        XCTAssertEqual(777.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "seven hundred and seventy-seven")
        XCTAssertEqual(800.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "eight hundred")
        XCTAssertEqual(900.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "nine hundred")
        XCTAssertEqual(1000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one thousand")
        XCTAssertEqual(1001.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one thousand and one")
        XCTAssertEqual(1010.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one thousand and ten")
        XCTAssertEqual(1011.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one thousand and eleven")
        XCTAssertEqual(1024.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one thousand and twenty-four")
        XCTAssertEqual(1100.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one thousand one hundred")
        XCTAssertEqual(1101.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one thousand one hundred and one")
        XCTAssertEqual(1728.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one thousand seven hundred and twenty-eight")
        XCTAssertEqual(2000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "two thousand")
        XCTAssertEqual(3000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "three thousand")
        XCTAssertEqual(10000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "ten thousand")
        XCTAssertEqual(100000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one hundred thousand")
        XCTAssertEqual(500000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "five hundred thousand")
        XCTAssertEqual(1000000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one million")
        XCTAssertEqual(1048576.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one million forty-eight thousand five hundred and seventy-six")
        XCTAssertEqual(10000000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "ten million")
        XCTAssertEqual(100000000.described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "one hundred million")
    }

    func testOrdinalSpelledOutWithDefaultConnector() {
        XCTAssertEqual(0.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "zeroth")
        XCTAssertEqual(1.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "first")
        XCTAssertEqual(2.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "second")
        XCTAssertEqual(3.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "third")
        XCTAssertEqual(4.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "fourth")
        XCTAssertEqual(5.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "fifth")
        XCTAssertEqual(6.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "sixth")
        XCTAssertEqual(7.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "seventh")
        XCTAssertEqual(8.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "eighth")
        XCTAssertEqual(9.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "ninth")
        XCTAssertEqual(10.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "tenth")
        XCTAssertEqual(11.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "eleventh")
        XCTAssertEqual(12.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "twelfth")
        XCTAssertEqual(13.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "thirteenth")
        XCTAssertEqual(14.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "fourteenth")
        XCTAssertEqual(15.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "fifteenth")
        XCTAssertEqual(16.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "sixteenth")
        XCTAssertEqual(17.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "seventeenth")
        XCTAssertEqual(18.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "eighteenth")
        XCTAssertEqual(19.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "nineteenth")
        XCTAssertEqual(20.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "twentieth")
        XCTAssertEqual(21.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "twenty-first")
        XCTAssertEqual(22.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "twenty-second")
        XCTAssertEqual(23.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "twenty-third")
        XCTAssertEqual(24.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "twenty-fourth")
        XCTAssertEqual(25.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "twenty-fifth")
        XCTAssertEqual(26.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "twenty-sixth")
        XCTAssertEqual(27.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "twenty-seventh")
        XCTAssertEqual(28.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "twenty-eighth")
        XCTAssertEqual(29.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "twenty-ninth")
        XCTAssertEqual(30.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "thirtieth")
        XCTAssertEqual(31.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "thirty-first")
        XCTAssertEqual(32.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "thirty-second")
        XCTAssertEqual(40.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "fortieth")
        XCTAssertEqual(50.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "fiftieth")
        XCTAssertEqual(60.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "sixtieth")
        XCTAssertEqual(70.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "seventieth")
        XCTAssertEqual(80.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "eightieth")
        XCTAssertEqual(87.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "eighty-seventh")
        XCTAssertEqual(90.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "ninetieth")
        XCTAssertEqual(99.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "ninety-ninth")
        XCTAssertEqual(100.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one hundredth")
        XCTAssertEqual(101.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one hundred first")
        XCTAssertEqual(110.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one hundred tenth")
        XCTAssertEqual(111.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one hundred eleventh")
        XCTAssertEqual(120.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one hundred twentieth")
        XCTAssertEqual(121.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one hundred twenty-first")
        XCTAssertEqual(144.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one hundred forty-fourth")
        XCTAssertEqual(200.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "two hundredth")
        XCTAssertEqual(300.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "three hundredth")
        XCTAssertEqual(400.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "four hundredth")
        XCTAssertEqual(500.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "five hundredth")
        XCTAssertEqual(600.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "six hundredth")
        XCTAssertEqual(666.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "six hundred sixty-sixth")
        XCTAssertEqual(700.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "seven hundredth")
        XCTAssertEqual(777.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "seven hundred seventy-seventh")
        XCTAssertEqual(800.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "eight hundredth")
        XCTAssertEqual(900.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "nine hundredth")
        XCTAssertEqual(1000.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one thousandth")
        XCTAssertEqual(1001.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one thousand first")
        XCTAssertEqual(1010.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one thousand tenth")
        XCTAssertEqual(1011.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one thousand eleventh")
        XCTAssertEqual(1024.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one thousand twenty-fourth")
        XCTAssertEqual(1100.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one thousand one hundredth")
        XCTAssertEqual(1101.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one thousand one hundred first")
        XCTAssertEqual(1728.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one thousand seven hundred twenty-eighth")
        XCTAssertEqual(2000.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "two thousandth")
        XCTAssertEqual(3000.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "three thousandth")
        XCTAssertEqual(10000.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "ten thousandth")
        XCTAssertEqual(100000.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one hundred thousandth")
        XCTAssertEqual(500000.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "five hundred thousandth")
        XCTAssertEqual(1000000.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one millionth")
        XCTAssertEqual(1048576.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one million forty-eight thousand five hundred seventy-sixth")
        XCTAssertEqual(10000000.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "ten millionth")
        XCTAssertEqual(100000000.described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "one hundred millionth")
    }

    func testNegativeCardinalSpelledOutWithDefaultConnector() {
        XCTAssertEqual((-0).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "zero")
        XCTAssertEqual((-1).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one")
        XCTAssertEqual((-2).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative two")
        XCTAssertEqual((-3).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative three")
        XCTAssertEqual((-4).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative four")
        XCTAssertEqual((-5).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative five")
        XCTAssertEqual((-6).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative six")
        XCTAssertEqual((-7).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative seven")
        XCTAssertEqual((-8).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative eight")
        XCTAssertEqual((-9).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative nine")
        XCTAssertEqual((-10).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative ten")
        XCTAssertEqual((-11).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative eleven")
        XCTAssertEqual((-12).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative twelve")
        XCTAssertEqual((-13).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative thirteen")
        XCTAssertEqual((-14).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative fourteen")
        XCTAssertEqual((-15).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative fifteen")
        XCTAssertEqual((-16).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative sixteen")
        XCTAssertEqual((-17).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative seventeen")
        XCTAssertEqual((-18).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative eighteen")
        XCTAssertEqual((-19).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative nineteen")
        XCTAssertEqual((-20).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative twenty")
        XCTAssertEqual((-21).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative twenty-one")
        XCTAssertEqual((-22).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative twenty-two")
        XCTAssertEqual((-23).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative twenty-three")
        XCTAssertEqual((-24).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative twenty-four")
        XCTAssertEqual((-25).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative twenty-five")
        XCTAssertEqual((-26).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative twenty-six")
        XCTAssertEqual((-27).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative twenty-seven")
        XCTAssertEqual((-28).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative twenty-eight")
        XCTAssertEqual((-29).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative twenty-nine")
        XCTAssertEqual((-30).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative thirty")
        XCTAssertEqual((-31).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative thirty-one")
        XCTAssertEqual((-32).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative thirty-two")
        XCTAssertEqual((-40).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative forty")
        XCTAssertEqual((-50).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative fifty")
        XCTAssertEqual((-60).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative sixty")
        XCTAssertEqual((-70).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative seventy")
        XCTAssertEqual((-80).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative eighty")
        XCTAssertEqual((-87).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative eighty-seven")
        XCTAssertEqual((-90).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative ninety")
        XCTAssertEqual((-99).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative ninety-nine")
        XCTAssertEqual((-100).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one hundred")
        XCTAssertEqual((-101).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one hundred one")
        XCTAssertEqual((-110).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one hundred ten")
        XCTAssertEqual((-111).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one hundred eleven")
        XCTAssertEqual((-120).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one hundred twenty")
        XCTAssertEqual((-121).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one hundred twenty-one")
        XCTAssertEqual((-144).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one hundred forty-four")
        XCTAssertEqual((-200).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative two hundred")
        XCTAssertEqual((-300).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative three hundred")
        XCTAssertEqual((-400).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative four hundred")
        XCTAssertEqual((-500).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative five hundred")
        XCTAssertEqual((-600).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative six hundred")
        XCTAssertEqual((-666).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative six hundred sixty-six")
        XCTAssertEqual((-700).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative seven hundred")
        XCTAssertEqual((-777).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative seven hundred seventy-seven")
        XCTAssertEqual((-800).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative eight hundred")
        XCTAssertEqual((-900).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative nine hundred")
        XCTAssertEqual((-1000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one thousand")
        XCTAssertEqual((-1001).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one thousand one")
        XCTAssertEqual((-1010).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one thousand ten")
        XCTAssertEqual((-1011).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one thousand eleven")
        XCTAssertEqual((-1024).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one thousand twenty-four")
        XCTAssertEqual((-1100).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one thousand one hundred")
        XCTAssertEqual((-1101).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one thousand one hundred one")
        XCTAssertEqual((-1728).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one thousand seven hundred twenty-eight")
        XCTAssertEqual((-2000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative two thousand")
        XCTAssertEqual((-3000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative three thousand")
        XCTAssertEqual((-10000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative ten thousand")
        XCTAssertEqual((-100000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one hundred thousand")
        XCTAssertEqual((-500000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative five hundred thousand")
        XCTAssertEqual((-1000000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one million")
        XCTAssertEqual((-1048576).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one million forty-eight thousand five hundred seventy-six")
        XCTAssertEqual((-10000000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative ten million")
        XCTAssertEqual((-100000000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " ")), "negative one hundred million")
    }

    func testNegativeCardinalSpelledOutWithAndConnector() {
        XCTAssertEqual((-0).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "zero")
        XCTAssertEqual((-1).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one")
        XCTAssertEqual((-2).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative two")
        XCTAssertEqual((-3).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative three")
        XCTAssertEqual((-4).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative four")
        XCTAssertEqual((-5).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative five")
        XCTAssertEqual((-6).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative six")
        XCTAssertEqual((-7).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative seven")
        XCTAssertEqual((-8).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative eight")
        XCTAssertEqual((-9).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative nine")
        XCTAssertEqual((-10).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative ten")
        XCTAssertEqual((-11).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative eleven")
        XCTAssertEqual((-12).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative twelve")
        XCTAssertEqual((-13).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative thirteen")
        XCTAssertEqual((-14).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative fourteen")
        XCTAssertEqual((-15).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative fifteen")
        XCTAssertEqual((-16).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative sixteen")
        XCTAssertEqual((-17).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative seventeen")
        XCTAssertEqual((-18).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative eighteen")
        XCTAssertEqual((-19).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative nineteen")
        XCTAssertEqual((-20).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative twenty")
        XCTAssertEqual((-21).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative twenty-one")
        XCTAssertEqual((-22).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative twenty-two")
        XCTAssertEqual((-23).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative twenty-three")
        XCTAssertEqual((-24).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative twenty-four")
        XCTAssertEqual((-25).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative twenty-five")
        XCTAssertEqual((-26).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative twenty-six")
        XCTAssertEqual((-27).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative twenty-seven")
        XCTAssertEqual((-28).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative twenty-eight")
        XCTAssertEqual((-29).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative twenty-nine")
        XCTAssertEqual((-30).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative thirty")
        XCTAssertEqual((-31).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative thirty-one")
        XCTAssertEqual((-32).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative thirty-two")
        XCTAssertEqual((-40).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative forty")
        XCTAssertEqual((-50).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative fifty")
        XCTAssertEqual((-60).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative sixty")
        XCTAssertEqual((-70).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative seventy")
        XCTAssertEqual((-80).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative eighty")
        XCTAssertEqual((-87).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative eighty-seven")
        XCTAssertEqual((-90).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative ninety")
        XCTAssertEqual((-100).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one hundred")
        XCTAssertEqual((-101).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one hundred and one")
        XCTAssertEqual((-110).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one hundred and ten")
        XCTAssertEqual((-111).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one hundred and eleven")
        XCTAssertEqual((-120).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one hundred and twenty")
        XCTAssertEqual((-121).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one hundred and twenty-one")
        XCTAssertEqual((-144).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one hundred and forty-four")
        XCTAssertEqual((-200).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative two hundred")
        XCTAssertEqual((-300).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative three hundred")
        XCTAssertEqual((-400).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative four hundred")
        XCTAssertEqual((-500).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative five hundred")
        XCTAssertEqual((-600).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative six hundred")
        XCTAssertEqual((-666).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative six hundred and sixty-six")
        XCTAssertEqual((-700).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative seven hundred")
        XCTAssertEqual((-777).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative seven hundred and seventy-seven")
        XCTAssertEqual((-800).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative eight hundred")
        XCTAssertEqual((-900).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative nine hundred")
        XCTAssertEqual((-1000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one thousand")
        XCTAssertEqual((-1001).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one thousand and one")
        XCTAssertEqual((-1010).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one thousand and ten")
        XCTAssertEqual((-1011).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one thousand and eleven")
        XCTAssertEqual((-1024).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one thousand and twenty-four")
        XCTAssertEqual((-1100).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one thousand one hundred")
        XCTAssertEqual((-1101).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one thousand one hundred and one")
        XCTAssertEqual((-1728).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one thousand seven hundred and twenty-eight")
        XCTAssertEqual((-2000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative two thousand")
        XCTAssertEqual((-3000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative three thousand")
        XCTAssertEqual((-10000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative ten thousand")
        XCTAssertEqual((-100000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one hundred thousand")
        XCTAssertEqual((-500000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative five hundred thousand")
        XCTAssertEqual((-1000000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one million")
        XCTAssertEqual((-1048576).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one million forty-eight thousand five hundred and seventy-six")
        XCTAssertEqual((-10000000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative ten million")
        XCTAssertEqual((-100000000).described(format: .spelledOutEnglish(.cardinal, specialConnector: " and ")), "negative one hundred million")
    }

    func testNegativeOrdinalSpelledOutWithDefaultConnector() {
        XCTAssertEqual((-0).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "zeroth")
        XCTAssertEqual((-1).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative first")
        XCTAssertEqual((-2).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative second")
        XCTAssertEqual((-3).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative third")
        XCTAssertEqual((-4).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative fourth")
        XCTAssertEqual((-5).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative fifth")
        XCTAssertEqual((-6).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative sixth")
        XCTAssertEqual((-7).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative seventh")
        XCTAssertEqual((-8).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative eighth")
        XCTAssertEqual((-9).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative ninth")
        XCTAssertEqual((-10).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative tenth")
        XCTAssertEqual((-11).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative eleventh")
        XCTAssertEqual((-12).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative twelfth")
        XCTAssertEqual((-13).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative thirteenth")
        XCTAssertEqual((-14).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative fourteenth")
        XCTAssertEqual((-15).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative fifteenth")
        XCTAssertEqual((-16).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative sixteenth")
        XCTAssertEqual((-17).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative seventeenth")
        XCTAssertEqual((-18).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative eighteenth")
        XCTAssertEqual((-19).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative nineteenth")
        XCTAssertEqual((-20).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative twentieth")
        XCTAssertEqual((-21).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative twenty-first")
        XCTAssertEqual((-22).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative twenty-second")
        XCTAssertEqual((-23).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative twenty-third")
        XCTAssertEqual((-24).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative twenty-fourth")
        XCTAssertEqual((-25).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative twenty-fifth")
        XCTAssertEqual((-26).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative twenty-sixth")
        XCTAssertEqual((-27).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative twenty-seventh")
        XCTAssertEqual((-28).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative twenty-eighth")
        XCTAssertEqual((-29).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative twenty-ninth")
        XCTAssertEqual((-30).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative thirtieth")
        XCTAssertEqual((-31).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative thirty-first")
        XCTAssertEqual((-32).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative thirty-second")
        XCTAssertEqual((-40).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative fortieth")
        XCTAssertEqual((-50).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative fiftieth")
        XCTAssertEqual((-60).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative sixtieth")
        XCTAssertEqual((-70).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative seventieth")
        XCTAssertEqual((-80).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative eightieth")
        XCTAssertEqual((-87).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative eighty-seventh")
        XCTAssertEqual((-90).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative ninetieth")
        XCTAssertEqual((-99).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative ninety-ninth")
        XCTAssertEqual((-100).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one hundredth")
        XCTAssertEqual((-101).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one hundred first")
        XCTAssertEqual((-110).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one hundred tenth")
        XCTAssertEqual((-111).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one hundred eleventh")
        XCTAssertEqual((-120).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one hundred twentieth")
        XCTAssertEqual((-121).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one hundred twenty-first")
        XCTAssertEqual((-144).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one hundred forty-fourth")
        XCTAssertEqual((-200).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative two hundredth")
        XCTAssertEqual((-300).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative three hundredth")
        XCTAssertEqual((-400).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative four hundredth")
        XCTAssertEqual((-500).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative five hundredth")
        XCTAssertEqual((-600).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative six hundredth")
        XCTAssertEqual((-666).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative six hundred sixty-sixth")
        XCTAssertEqual((-700).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative seven hundredth")
        XCTAssertEqual((-777).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative seven hundred seventy-seventh")
        XCTAssertEqual((-800).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative eight hundredth")
        XCTAssertEqual((-900).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative nine hundredth")
        XCTAssertEqual((-1000).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one thousandth")
        XCTAssertEqual((-1001).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one thousand first")
        XCTAssertEqual((-1010).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one thousand tenth")
        XCTAssertEqual((-1011).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one thousand eleventh")
        XCTAssertEqual((-1024).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one thousand twenty-fourth")
        XCTAssertEqual((-1100).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one thousand one hundredth")
        XCTAssertEqual((-1101).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one thousand one hundred first")
        XCTAssertEqual((-1728).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one thousand seven hundred twenty-eighth")
        XCTAssertEqual((-2000).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative two thousandth")
        XCTAssertEqual((-3000).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative three thousandth")
        XCTAssertEqual((-10000).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative ten thousandth")
        XCTAssertEqual((-100000).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one hundred thousandth")
        XCTAssertEqual((-500000).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative five hundred thousandth")
        XCTAssertEqual((-1000000).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one millionth")
        XCTAssertEqual((-1048576).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one million forty-eight thousand five hundred seventy-sixth")
        XCTAssertEqual((-10000000).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative ten millionth")
        XCTAssertEqual((-100000000).described(format: .spelledOutEnglish(.ordinal, specialConnector: " ")), "negative one hundred millionth")
    }
}
